boxplot(csvF[1:80,4],csvF[81:140,4])
boxplot(csvF[1:80,5],csvF[81:140,5])
boxplot(csvF[1:80,6],csvF[81:140,6])
boxplot(csvF[1:80,7],csvF[81:140,7])
boxplot(csvF[1:80,8],csvF[81:140,8])
boxplot(csvF[1:80,9],csvF[81:140,9])
boxplot(csvF[1:80,10],csvF[81:140,10])
boxplot(csvF[1:80,11],csvF[81:140,11])
boxplot(csvF[1:80,12],csvF[81:140,12])
boxplot(csvF[1:80,13],csvF[81:140,13])
boxplot(csvF[1:80,14],csvF[81:140,14])
boxplot(csvF[1:80,15],csvF[81:140,15])
boxplot(csvF[1:80,16],csvF[81:140,16])
boxplot(csvF[1:80,17],csvF[81:140,17])
boxplot(csvF[1:80,18],csvF[81:140,18])
#scatter graphs
#plot(csvF[1:80,4]~csvF[1:80,5])
}
degreeOfLinAssoc<-function()
{
print(cor(csvF[1:140,3:18]))
for (i in 3:(10)){
for (y in 3:(18)){
if (i != y)
{
plot(csvF[1:140,i],csvF[1:140,y],xlab=i-2,ylab=y-2)
}
}
}
}
csvF<-read.csv(file ="40293751_features.csv" ,header = TRUE)
View(csvF)
#colnames(csvF)<-c("symbol","number",'fea1','fea2','fea3','fea4','fea5','fea6','fea7','fea8','fea9','fea10','fea11','fea12','fea13','fea14','fea15','fea16')
csvF<-read.csv(file ="40293751_features.csv" ,header = TRUE)
print(csvF)
source("~/CSC2062 Assignment 2/csc2062_a2_EunanDiamond_40293751.rmd", encoding = 'UTF-8')
knitr::opts_chunk$set(echo=TRUE)
knitr::read_chunk("Section3_code.R")
#library(broom)
#library(kableExtra)
knitr::opts_chunk$set(echo=TRUE)
knitr::read_chunk("Section3_code.R")
#library(broom)
#library(kableExtra)
knitr::opts_chunk$set(echo=TRUE)
knitr::read_chunk("Section3_code.R")
#library(broom)
#library(kableExtra)
source("~/CSC2062 Assignment 2/csc2062_a2_EunanDiamond_40293751.rmd", encoding = 'UTF-8')
createHistograms()#Part1
knitr::opts_chunk$set(echo=TRUE)
knitr::read_chunk("Section3_code.R")#
options(knitr.duplicate.label = "allow")
#library(broom)
#library(kableExtra)
source("~/CSC2062 Assignment 2/csc2062_a2_EunanDiamond_40293751.rmd", encoding = 'UTF-8')
source("~/CSC2062 Assignment 2/csc2062_a2_EunanDiamond_40293751.rmd", encoding = 'UTF-8')
source("~/CSC2062 Assignment 2/csc2062_a2_EunanDiamond_40293751.rmd", encoding = 'UTF-8')
source("~/CSC2062 Assignment 2/csc2062_a2_EunanDiamond_40293751.rmd", encoding = 'UTF-8')
source("~/CSC2062 Assignment 2/csc2062_a2_EunanDiamond_40293751.rmd", encoding = 'UTF-8')
source("~/CSC2062 Assignment 2/csc2062_a2_EunanDiamond_40293751.rmd", encoding = 'UTF-8')
knitr::opts_chunk$set(echo=TRUE)
knitr::opts_chunk$set(echo=TRUE)
knitr::read_chunk("Section3_code.R")#
#library(broom)
#library(kableExtra)
source("~/CSC2062 Assignment 2/csc2062_a2_EunanDiamond_40293751.rmd", encoding = 'UTF-8')
source("~/CSC2062 Assignment 2/csc2062_a2_EunanDiamond_40293751.rmd", encoding = 'UTF-8')
knitr::opts_chunk$set(echo=TRUE)
knitr::read_chunk("Section3_code.R")
knitr::opts_chunk$set(echo=TRUE)
knitr::read_chunk("Section3_code.R")
source("~/CSC2062 Assignment 2/csc2062_a2_EunanDiamond_40293751.rmd", encoding = 'UTF-8')
source("~/CSC2062 Assignment 2/csc2062_a2_EunanDiamond_40293751.rmd", encoding = 'UTF-8')
source("~/CSC2062 Assignment 2/csc2062_a2_EunanDiamond_40293751.rmd", encoding = 'UTF-8')
source("~/CSC2062 Assignment 2/csc2062_a2_EunanDiamond_40293751.rmd", encoding = 'UTF-8')
source("~/CSC2062 Assignment 2/csc2062_a2_EunanDiamond_40293751.rmd", encoding = 'UTF-8')
source("~/CSC2062 Assignment 2/csc2062_a2_EunanDiamond_40293751.rmd", encoding = 'UTF-8')
source("~/CSC2062 Assignment 2/csc2062_a2_EunanDiamond_40293751.rmd", encoding = 'UTF-8')
source("~/CSC2062 Assignment 2/csc2062_a2_EunanDiamond_40293751.rmd", encoding = 'UTF-8')
knitr::opts_chunk$set(echo=TRUE)
knitr::read_chunk("Section3_code.R")
csvF<-read.csv(file ="40293751_features.csv" ,header = TRUE)
print(csvF)
library(raster)
library(knitr)
library(grDevices)
library(data.table)
library(ggplot2)
library(psych)
search()
library("rstudioapi")
setwd(dirname(getActiveDocumentContext()$path))
getwd()
set.seed(42)
#Histograms
createHistograms<-function()
{
h1<- hist(csvF[1:80,3],main="Number of Black pixels for letters", xlab="Black Pixels")
#plot(h1)
h2<- hist(csvF[81:140,3],main="Number of Black pixels for non letters", xlab="Black Pixels")
#plot(h2)
h3<-hist(csvF[1:80,4],main="Number of rows with 1 black pixel for letters", xlab="rows with 1 Black Pixel")
#plot(h3)
h4<-hist(csvF[81:140,4],main="Number of rows with 1 black pixel for non letters", xlab="rows with 1 Black Pixel")
plot(h4)
h5<-hist(csvF[1:80,5],main="Number of cols with 1 black pixel for letters", xlab="cols with 1 Black Pixel")
#plot(h5)
h6<-hist(csvF[81:140,5],main="Number of cols with 1 black pixel for non letters", xlab="cols with 1 Black Pixel")
#plot(h6)
h7<-hist(csvF[1:80,6],main="Number of rows with 3 black pixels or more for letters", xlab="rows with 3+ Black Pixels")
#plot(h7)
h8<-hist(csvF[81:140,6],main="Number of cols with 3 black pixels or more for non letters", xlab="rows with 3+ Black Pixels")
#plot(h8)
h9<-hist(csvF[1:80,7],main="Number of cols with 3 black pixels or more for letters", xlab="cols with 3+ Black Pixels")
#plot(h9)
h10<-hist(csvF[81:140,7],main="Number of cols with 3 black pixels or more for non letters", xlab="cols with 3+ Black Pixels")
#plot(h10)
h11<-hist(csvF[1:80,8],main="aspect ratio for letters", xlab="ascept ratio")
#plot(h11)
h12<-hist(csvF[81:140,8],main="aspect ratio for non letters", xlab="ascept ratio")
#plot(h12)
}
createSummaryStats<-function()
{
sumStats<-matrix(,ncol = 3,byrow = TRUE)
colnames(sumStats)<-c('mean','median','standard deviation')
print(summary(csvF[1:80,3]))
print(summary(csvF[81:140,3]))
print(summary(csvF[1:80,4]))
print(summary(csvF[81:140,4]))
print(summary(csvF[1:80,5]))
print(summary(csvF[81:140,5]))
print(summary(csvF[1:80,6]))
print(summary(csvF[81:140,6]))
print(summary(csvF[1:80,7]))
print(summary(csvF[81:140,7]))
print(summary(csvF[1:80,8]))
print(summary(csvF[81:140,8]))
print(summary(csvF[1:80,9]))
print(summary(csvF[81:140,9]))
print(summary(csvF[1:80,10]))
print(summary(csvF[81:140,10]))
print(summary(csvF[1:80,11]))
print(summary(csvF[81:140,11]))
print(summary(csvF[1:80,12]))
print(summary(csvF[81:140,12]))
print(summary(csvF[1:80,13]))
print(summary(csvF[81:140,13]))
print(summary(csvF[1:80,14]))
print(summary(csvF[81:140,14]))
print(summary(csvF[1:80,15]))
print(summary(csvF[81:140,15]))
print(summary(csvF[1:80,16]))
print(summary(csvF[81:140,16]))
print(summary(csvF[1:80,17]))
print(summary(csvF[81:140,17]))
print(summary(csvF[1:80,18]))
print(summary(csvF[81:140,18]))
#Histogram for 3 features
x1<-csvF[1:80,3]
x2<-csvF[81:140,3]
theme_set(theme_bw())
df <- data.table(k=c(x1,x2),label=c(rep('letters'),rep('non letters')))
gr1<- ggplot()+geom_histogram(aes(x=x1,fill="blue"),breaks=hist(x1,plot=F)$breaks,alpha=0.7)+geom_histogram(aes(x=x2,fill="darkgreen"),breaks=hist(x2,plot=F)$breaks,alpha=0.7)
gr1<-gr1 + xlab("Number of black Pixels")+ylab("occurances")+ggtitle("Number of Black pixels in images")+theme(plot.title = element_text(hjust=0.5))
gr1<-gr1+ scale_fill_manual(values = c("blue","darkgreen"),name="Symbols",labels=c("letters","Non-Letters"))
plot(gr1)
x1<-csvF[1:80,10]
x2<-csvF[81:140,10]
gr1<- ggplot()+geom_histogram(aes(x=x1,fill="blue"),breaks=hist(x1,plot=F)$breaks,alpha=0.7)+geom_histogram(aes(x=x2,fill="darkgreen"),breaks=hist(x2,plot=F)$breaks,alpha=0.7)
gr1<-gr1 + xlab("Number of black pixels above")+ylab("occurances")+ggtitle("Number of Black pixels above in neighs")+theme(plot.title = element_text(hjust=0.5))
gr1<-gr1+ scale_fill_manual(values = c("blue","darkgreen"),name="Symbols",labels=c("letters","Non-Letters"))
plot(gr1)
x1<-csvF[1:80,17]
x2<-csvF[81:140,17]
gr1<- ggplot()+geom_histogram(aes(x=x1,fill="blue"),breaks=hist(x1,plot=F)$breaks,alpha=0.7)+geom_histogram(aes(x=x2,fill="darkgreen"),breaks=hist(x2,plot=F)$breaks,alpha=0.7)
gr1<-gr1 + xlab("eyes")+ylab("occurances")+ggtitle("eyes")+theme(plot.title = element_text(hjust=0.5))
gr1<-gr1+ scale_fill_manual(values = c("blue","darkgreen"),name="Symbols",labels=c("letters","Non-Letters"))
plot(gr1)
}
statsAnalyses<-function()
{
#find the hypotheses- significant difference between letters and non-letters
# using the analysis which features are most useful to discriminate whether an image is a letter or a non-letter
#-----Analysis-----
#normal distribution and skews
x = csvF[1:80,3]
densities = dnorm(x, mean = mean(csvF[1:80,3]),sd=sd(csvF[1:80,3]))
plot(x, densities, type="l", col="red", lty=1, lwd=3, xlab="x",
ylab="Density", main="Normal Distribution for letter number of black pixels")
x = csvF[81:140,3]
print(skew(csvF[81:140,3]))
densities = dnorm(x, mean = mean(csvF[81:140,3]),sd=sd(csvF[81:140,3]))
plot(x, densities, type="l", col="red", lty=1, lwd=3, xlab="x",
ylab="Density", main="Normal Distribution for letter number of black pixels")
x = csvF[1:80,4]
densities = dnorm(x, mean = mean(csvF[1:80,4]),sd=sd(csvF[1:80,4]))
plot(x, densities, type="l", col="red", lty=1, lwd=3, xlab="x",
ylab="Density", main="Normal Distribution for letters number of rows with 1 black pixel")
x = csvF[81:140,4]
densities = dnorm(x, mean = mean(csvF[81:140,4]),sd=sd(csvF[81:140,4]))
plot(x, densities, type="l", col="red", lty=1, lwd=3, xlab="x",
ylab="Density", main="Normal Distribution for Nonletters number of rows with 1 black pixel")
x = csvF[1:80,5]
densities = dnorm(x, mean = mean(csvF[1:80,5]),sd=sd(csvF[1:80,5]))
plot(x, densities, type="l", col="red", lty=1, lwd=3, xlab="x",
ylab="Density", main="Normal Distribution for letters number of cols with 1 black pixel")
x = csvF[81:140,5]
densities = dnorm(x, mean = mean(csvF[81:140,5]),sd=sd(csvF[81:140,5]))
plot(x, densities, type="l", col="red", lty=1, lwd=3, xlab="x",
ylab="Density", main="Normal Distribution for Nonletters number of cols with 1 black pixel")
x = csvF[1:80,6]
densities = dnorm(x, mean = mean(csvF[1:80,6]),sd=sd(csvF[1:80,6]))
plot(x, densities, type="l", col="red", lty=1, lwd=3, xlab="x",
ylab="Density", main="Normal Distribution for letters number of rows with 3+ black pixels")
x = csvF[81:140,6]
densities = dnorm(x, mean = mean(csvF[81:140,6]),sd=sd(csvF[81:140,6]))
plot(x, densities, type="l", col="red", lty=1, lwd=3, xlab="x",
ylab="Density", main="Normal Distribution for Nonletters number of rows with 3+ black pixels")
x = csvF[1:80,7]
densities = dnorm(x, mean = mean(csvF[1:80,7]),sd=sd(csvF[1:80,7]))
plot(x, densities, type="l", col="red", lty=1, lwd=3, xlab="x",
ylab="Density", main="Normal Distribution for letters number of cols with 3+ black pixels")
x = csvF[81:140,7]
densities = dnorm(x, mean = mean(csvF[81:140,7]),sd=sd(csvF[81:140,7]))
plot(x, densities, type="l", col="red", lty=1, lwd=3, xlab="x",
ylab="Density", main="Normal Distribution for Nonletters number of cols with 3+ black pixels")
x = csvF[1:80,8]
densities = dnorm(x, mean = mean(csvF[1:80,8]),sd=sd(csvF[1:80,8]))
plot(x, densities, type="l", col="red", lty=1, lwd=3, xlab="x",
ylab="Density", main="Normal Distribution for letters Ascept ratio")
x = csvF[81:140,8]
densities = dnorm(x, mean = mean(csvF[81:140,8]),sd=sd(csvF[81:140,8]))
plot(x, densities, type="l", col="red", lty=1, lwd=3, xlab="x",
ylab="Density", main="Normal Distribution for Nonletters Ascept ratio")
x = csvF[1:80,9]
densities = dnorm(x, mean = mean(csvF[1:80,9]),sd=sd(csvF[1:80,9]))
plot(x, densities, type="l", col="red", lty=1, lwd=3, xlab="x",
ylab="Density", main="Normal Distribution for letters neigh have 1 black pixel")
x = csvF[81:140,9]
densities = dnorm(x, mean = mean(csvF[81:140,9]),sd=sd(csvF[81:140,9]))
plot(x, densities, type="l", col="red", lty=1, lwd=3, xlab="x",
ylab="Density", main="Normal Distribution for nonletters neigh have 1 black pixel")
x = csvF[1:80,10]
densities = dnorm(x, mean = mean(csvF[1:80,10]),sd=sd(csvF[1:80,10]))
plot(x, densities, type="l", col="red", lty=1, lwd=3, xlab="x",
ylab="Density", main="Normal Distribution for letters above neigh have no black pixels")
x = csvF[81:140,10]
densities = dnorm(x, mean = mean(csvF[81:140,10]),sd=sd(csvF[81:140,10]))
plot(x, densities, type="l", col="red", lty=1, lwd=3, xlab="x",
ylab="Density", main="Normal Distribution for nonletters above neigh have no black pixels")
x = csvF[1:80,11]
densities = dnorm(x, mean = mean(csvF[1:80,11]),sd=sd(csvF[1:80,11]))
plot(x, densities, type="l", col="red", lty=1, lwd=3, xlab="x",
ylab="Density", main="Normal Distribution for letters below neigh have no black pixels")
x = csvF[81:140,11]
densities = dnorm(x, mean = mean(csvF[81:140,11]),sd=sd(csvF[81:140,11]))
plot(x, densities, type="l", col="red", lty=1, lwd=3, xlab="x",
ylab="Density", main="Normal Distribution for nonletters below neigh have no black pixels")
x = csvF[1:80,12]
densities = dnorm(x, mean = mean(csvF[1:80,12]),sd=sd(csvF[1:80,12]))
plot(x, densities, type="l", col="red", lty=1, lwd=3, xlab="x",
ylab="Density", main="Normal Distribution for letters left neigh have no black pixels")
x = csvF[81:140,12]
densities = dnorm(x, mean = mean(csvF[81:140,12]),sd=sd(csvF[81:140,12]))
plot(x, densities, type="l", col="red", lty=1, lwd=3, xlab="x",
ylab="Density", main="Normal Distribution for Nonletters left neigh have no black pixels")
x = csvF[1:80,13]
densities = dnorm(x, mean = mean(csvF[1:80,13]),sd=sd(csvF[1:80,13]))
plot(x, densities, type="l", col="red", lty=1, lwd=3, xlab="x",
ylab="Density", main="Normal Distribution for letters right neigh have no black pixels")
x = csvF[81:140,13]
densities = dnorm(x, mean = mean(csvF[81:140,13]),sd=sd(csvF[81:140,13]))
plot(x, densities, type="l", col="red", lty=1, lwd=3, xlab="x",
ylab="Density", main="Normal Distribution for Nonletters right neigh have no black pixels")
x = csvF[1:80,14]
densities = dnorm(x, mean = mean(csvF[1:80,14]),sd=sd(csvF[1:80,14]))
plot(x, densities, type="l", col="red", lty=1, lwd=3, xlab="x",
ylab="Density", main="Normal Distribution for letters horiz neigh have no black pixels")
x = csvF[81:140,14]
densities = dnorm(x, mean = mean(csvF[81:140,14]),sd=sd(csvF[81:140,14]))
plot(x, densities, type="l", col="red", lty=1, lwd=3, xlab="x",
ylab="Density", main="Normal Distribution for Nonletters horiz neigh have no black pixels")
x = csvF[1:80,15]
densities = dnorm(x, mean = mean(csvF[1:80,15]),sd=sd(csvF[1:80,15]))
plot(x, densities, type="l", col="red", lty=1, lwd=3, xlab="x",
ylab="Density", main="Normal Distribution for letters vert neigh have no black pixels")
x = csvF[81:140,15]
densities = dnorm(x, mean = mean(csvF[81:140,15]),sd=sd(csvF[81:140,15]))
plot(x, densities, type="l", col="red", lty=1, lwd=3, xlab="x",
ylab="Density", main="Normal Distribution for Nonletters vert neigh have no black pixels")
x = csvF[1:80,16]
densities = dnorm(x, mean = mean(csvF[1:80,16]),sd=sd(csvF[1:80,16]))
plot(x, densities, type="l", col="red", lty=1, lwd=3, xlab="x",
ylab="Density", main="Normal Distribution for letters connected areas neigh have no black pixels")
x = csvF[81:140,16]
densities = dnorm(x, mean = mean(csvF[81:140,16]),sd=sd(csvF[81:140,16]))
plot(x, densities, type="l", col="red", lty=1, lwd=3, xlab="x",
ylab="Density", main="Normal Distribution for Nonletters connected areas neigh have no black pixels")
x = csvF[1:80,17]
densities = dnorm(x, mean = mean(csvF[1:80,17]),sd=sd(csvF[1:80,17]))
plot(x, densities, type="l", col="red", lty=1, lwd=3, xlab="x",
ylab="Density", main="Normal Distribution for letters eyes")
# x = csvF[81:140,17]
# densities = dnorm(x, mean = mean(csvF[81:140,17]),sd=sd(csvF[81:140,17]))
# plot(x, densities, type="l", col="red", lty=1, lwd=3, xlab="x",
#      ylab="Density", main="Normal Distribution for Nonletters eyes")
x = csvF[1:80,18]
densities = dnorm(x, mean = mean(csvF[1:80,18]),sd=sd(csvF[1:80,18]))
plot(x, densities, type="l", col="red", lty=1, lwd=3, xlab="x",
ylab="Density", main="Normal Distribution for letters custom")
x = csvF[81:140,18]
densities = dnorm(x, mean = mean(csvF[81:140,18]),sd=sd(csvF[81:140,18]))
plot(x, densities, type="l", col="red", lty=1, lwd=3, xlab="x",
ylab="Density", main="Normal Distribution for Nonletters custom")
#Skews
skewsTab<-matrix(,ncol = 2,byrow = TRUE)
colnames(skewsTab)<-c('letters','Non letters')
skews<-c(skew(csvF[1:80,3]))
skews<-append(skews,skew(csvF[81:140,3]))
skewsTab<-rbind(skewsTab,skews)
skews<-c(skew(csvF[1:80,4]))
skews<-append(skews,skew(csvF[81:140,4]))
skewsTab<-rbind(skewsTab,skews)
skews<-c(skew(csvF[1:80,5]))
skews<-append(skews,skew(csvF[81:140,5]))
skewsTab<-rbind(skewsTab,skews)
skews<-c(skew(csvF[1:80,6]))
skews<-append(skews,skew(csvF[81:140,6]))
skewsTab<-rbind(skewsTab,skews)
skews<-c(skew(csvF[1:80,7]))
skews<-append(skews,skew(csvF[81:140,7]))
skewsTab<-rbind(skewsTab,skews)
skews<-c(skew(csvF[1:80,8]))
skews<-append(skews,skew(csvF[81:140,8]))
skewsTab<-rbind(skewsTab,skews)
skews<-c(skew(csvF[1:80,9]))
skews<-append(skews,skew(csvF[81:140,9]))
skewsTab<-rbind(skewsTab,skews)
skews<-c(skew(csvF[1:80,10]))
skews<-append(skews,skew(csvF[81:140,10]))
skewsTab<-rbind(skewsTab,skews)
skews<-c(skew(csvF[1:80,11]))
skews<-append(skews,skew(csvF[81:140,11]))
skewsTab<-rbind(skewsTab,skews)
skews<-c(skew(csvF[1:80,12]))
skews<-append(skews,skew(csvF[81:140,12]))
skewsTab<-rbind(skewsTab,skews)
skews<-c(skew(csvF[1:80,13]))
skews<-append(skews,skew(csvF[81:140,13]))
skewsTab<-rbind(skewsTab,skews)
skews<-c(skew(csvF[1:80,14]))
skews<-append(skews,skew(csvF[81:140,14]))
skewsTab<-rbind(skewsTab,skews)
skews<-c(skew(csvF[1:80,15]))
skews<-append(skews,skew(csvF[81:140,15]))
skewsTab<-rbind(skewsTab,skews)
skews<-c(skew(csvF[1:80,16]))
skews<-append(skews,skew(csvF[81:140,16]))
skewsTab<-rbind(skewsTab,skews)
skews<-c(skew(csvF[1:80,17]))
skews<-append(skews,skew(csvF[81:140,17]))
skewsTab<-rbind(skewsTab,skews)
skews<-c(skew(csvF[1:80,18]))
skews<-append(skews,skew(csvF[81:140,18]))
skewsTab<-rbind(skewsTab,skews)
skewsTab <- as.table(skewsTab)
rownames(skewsTab)<-c('','number of pixels','rows with 1 black pixel','cols with 1 black pixel','rows with 3 or more black pixels','cols with 3 or more black pixels','Aspect ratio','neighbours with 1 black pixel','no above neighbours with black pixels','no below neighbours with black pixels','no left neighbours with black pixels','no right neighbours with black pixels','no horiz neighbours with black pixels','no vert neighbours with black pixels','connected areas','eyes','custom')
write.table(na.omit(skewsTab),file="SkewsStats.csv",quote = FALSE,sep=",")
skewStats<-read.csv(file ="SkewsStats.csv" ,header = TRUE)
View(skewStats)
#randomization test
#Difference in means
MeanDifTab<-matrix(,ncol = 1,byrow = TRUE)
colnames(MeanDifTab)<-c("Difference in means")
meanDif<-c(mean(csvF[1:80,3])-mean(csvF[81:140,3]))
MeanDifTab<-rbind(MeanDifTab,meanDif)
meanDif<-c(mean(csvF[1:80,4])-mean(csvF[81:140,4]))
MeanDifTab<-rbind(MeanDifTab,meanDif)
meanDif<-c(mean(csvF[1:80,5])-mean(csvF[81:140,5]))
MeanDifTab<-rbind(MeanDifTab,meanDif)
meanDif<-c(mean(csvF[1:80,6])-mean(csvF[81:140,6]))
MeanDifTab<-rbind(MeanDifTab,meanDif)
meanDif<-c(mean(csvF[1:80,7])-mean(csvF[81:140,7]))
MeanDifTab<-rbind(MeanDifTab,meanDif)
meanDif<-c(mean(csvF[1:80,8])-mean(csvF[81:140,8]))
MeanDifTab<-rbind(MeanDifTab,meanDif)
meanDif<-c(mean(csvF[1:80,9])-mean(csvF[81:140,9]))
MeanDifTab<-rbind(MeanDifTab,meanDif)
meanDif<-c(mean(csvF[1:80,10])-mean(csvF[81:140,10]))
MeanDifTab<-rbind(MeanDifTab,meanDif)
meanDif<-c(mean(csvF[1:80,11])-mean(csvF[81:140,11]))
MeanDifTab<-rbind(MeanDifTab,meanDif)
meanDif<-c(mean(csvF[1:80,12])-mean(csvF[81:140,12]))
MeanDifTab<-rbind(MeanDifTab,meanDif)
meanDif<-c(mean(csvF[1:80,13])-mean(csvF[81:140,13]))
MeanDifTab<-rbind(MeanDifTab,meanDif)
meanDif<-c(mean(csvF[1:80,14])-mean(csvF[81:140,14]))
MeanDifTab<-rbind(MeanDifTab,meanDif)
meanDif<-c(mean(csvF[1:80,15])-mean(csvF[81:140,15]))
MeanDifTab<-rbind(MeanDifTab,meanDif)
meanDif<-c(mean(csvF[1:80,16])-mean(csvF[81:140,16]))
MeanDifTab<-rbind(MeanDifTab,meanDif)
meanDif<-c(mean(csvF[1:80,17])-mean(csvF[81:140,17]))
MeanDifTab<-rbind(MeanDifTab,meanDif)
meanDif<-c(mean(csvF[1:80,18])-mean(csvF[81:140,18]))
MeanDifTab<-rbind(MeanDifTab,meanDif)
MeanDifTab <- as.table(MeanDifTab)
rownames(MeanDifTab)<-c('','number of pixels','rows with 1 black pixel','cols with 1 black pixel','rows with 3 or more black pixels','cols with 3 or more black pixels','Aspect ratio','neighbours with 1 black pixel','no above neighbours with black pixels','no below neighbours with black pixels','no left neighbours with black pixels','no right neighbours with black pixels','no horiz neighbours with black pixels','no vert neighbours with black pixels','connected areas','eyes','custom')
write.table(na.omit(MeanDifTab),file="MeanDifStats.csv",quote = FALSE,sep=",")
MeanDifStats<-read.csv(file ="MeanDifStats.csv" ,header = TRUE)
View(MeanDifStats)
#t-Tests for each feature
print(t.test(csvF[1:80,3],csvF[81:140,3]),alt="two.sided")
print(t.test(csvF[1:80,4],csvF[81:140,4]),alt="two.sided")
print(t.test(csvF[1:80,5],csvF[81:140,5]),alt="two.sided")
print(t.test(csvF[1:80,6],csvF[81:140,6]),alt="two.sided")
print(t.test(csvF[1:80,7],csvF[81:140,7]),alt="two.sided")
print(t.test(csvF[1:80,8],csvF[81:140,8]),alt="two.sided")
print(t.test(csvF[1:80,9],csvF[81:140,9]),alt="two.sided")
print(t.test(csvF[1:80,10],csvF[81:140,10]),alt="two.sided")
print(t.test(csvF[1:80,11],csvF[81:140,11]),alt="two.sided")
print(t.test(csvF[1:80,12],csvF[81:140,12]),alt="two.sided")
print(t.test(csvF[1:80,13],csvF[81:140,13]),alt="two.sided")
print(t.test(csvF[1:80,14],csvF[81:140,14]),alt="two.sided")
print(t.test(csvF[1:80,15],csvF[81:140,15]),alt="two.sided")
print(t.test(csvF[1:80,16],csvF[81:140,16]),alt="two.sided")
print(t.test(csvF[1:80,17],csvF[81:140,17]),alt="two.sided")
print(t.test(csvF[1:80,18],csvF[81:140,18]),alt="two.sided")
#box plot
boxplot(csvF[1:80,3],csvF[81:140,3])
boxplot(csvF[1:80,4],csvF[81:140,4])
boxplot(csvF[1:80,5],csvF[81:140,5])
boxplot(csvF[1:80,6],csvF[81:140,6])
boxplot(csvF[1:80,7],csvF[81:140,7])
boxplot(csvF[1:80,8],csvF[81:140,8])
boxplot(csvF[1:80,9],csvF[81:140,9])
boxplot(csvF[1:80,10],csvF[81:140,10])
boxplot(csvF[1:80,11],csvF[81:140,11])
boxplot(csvF[1:80,12],csvF[81:140,12])
boxplot(csvF[1:80,13],csvF[81:140,13])
boxplot(csvF[1:80,14],csvF[81:140,14])
boxplot(csvF[1:80,15],csvF[81:140,15])
boxplot(csvF[1:80,16],csvF[81:140,16])
boxplot(csvF[1:80,17],csvF[81:140,17])
boxplot(csvF[1:80,18],csvF[81:140,18])
#scatter graphs
#plot(csvF[1:80,4]~csvF[1:80,5])
}
degreeOfLinAssoc<-function()
{
print(cor(csvF[1:140,3:18]))
for (i in 3:(10)){
for (y in 3:(18)){
if (i != y)
{
plot(csvF[1:140,i],csvF[1:140,y],xlab=i-2,ylab=y-2)
}
}
}
}
csvF<-read.csv(file ="40293751_features.csv" ,header = TRUE)
View(csvF)
#colnames(csvF)<-c("symbol","number",'fea1','fea2','fea3','fea4','fea5','fea6','fea7','fea8','fea9','fea10','fea11','fea12','fea13','fea14','fea15','fea16')
createHistograms()#Part1
createSummaryStats()#Part2
statsAnalyses()#Part3
degreeOfLinAssoc()#Part4
source("~/CSC2062 Assignment 2/csc2062_a2_EunanDiamond_40293751.rmd", encoding = 'UTF-8')
source("~/CSC2062 Assignment 2/csc2062_a2_EunanDiamond_40293751.rmd", encoding = 'UTF-8')
source("~/CSC2062 Assignment 2/csc2062_a2_EunanDiamond_40293751.rmd", encoding = 'UTF-8')
source("~/CSC2062 Assignment 2/csc2062_a2_EunanDiamond_40293751.rmd", encoding = 'UTF-8')
source("~/CSC2062 Assignment 2/csc2062_a2_EunanDiamond_40293751.rmd", encoding = 'UTF-8')
source("~/CSC2062 Assignment 2/csc2062_a2_EunanDiamond_40293751.rmd", encoding = 'UTF-8')
knitr::opts_chunk$set(echo=TRUE)
knitr::read_chunk("Section3_code.R")
knitr::opts_chunk$set(echo=TRUE)
knitr::read_chunk("Section3_code.R")
knitr::opts_chunk$set(echo=TRUE)
knitr::read_chunk("Section4_code.R")
source("./section2_code.r")
csvF<-read.csv(file ="40293751_features.csv" ,header = TRUE)
print(csvF)
library(raster)
library(knitr)
library(grDevices)
library(data.table)
library(ggplot2)
library(psych)
search()
library("rstudioapi")
setwd(dirname(getActiveDocumentContext()$path))
source("~/CSC2062 Assignment 2/csc2062_a2_EunanDiamond_40293751.rmd", encoding = 'UTF-8')
library(raster)
search()
library("rstudioapi")
setwd(dirname(getActiveDocumentContext()$path))
getwd()
library(raster)
search()
library("rstudioapi")
setwd(dirname(getActiveDocumentContext()$path))
getwd()
library(raster)
search()
library("rstudioapi")
setwd(dirname(getActiveDocumentContext()$path))
getwd()
wordcountaddin:::text_stats()
wordcountaddin:::text_stats()
wordcountaddin:::text_stats()
